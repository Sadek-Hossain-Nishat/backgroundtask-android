# AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

<!--    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />-->
<!--    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>-->
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
    <application
        android:name=".App"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.BackgroundTaskApp"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>


       <service android:name=".ExampleJobIntentService"
           android:permission="android.permission.BIND_JOB_SERVICE"/>
    </application>



</manifest>


# App.java



import android.app.Application;
import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.os.Build;

public class App extends Application {
    public static final String CHANNEL_ID= "exampleServiceChannel";

    @Override
    public void onCreate() {
        super.onCreate();

        createNotificationChannel();
    }

    private void createNotificationChannel() {

        if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.O) {

            NotificationChannel serviceChannel = new NotificationChannel(
                    CHANNEL_ID,
                    "Example Service Channel",
                    NotificationManager.IMPORTANCE_DEFAULT
            );
            NotificationManager manager = getSystemService(NotificationManager.class);
            manager.createNotificationChannel(serviceChannel);
        }


    }
}


# ExampleJobIntentService.java




import static com.example.backgroundtaskapp.App.CHANNEL_ID;

import android.app.IntentService;
import android.app.Notification;
import android.content.Context;
import android.content.Intent;
import android.os.Build;
import android.os.PowerManager;
import android.os.SystemClock;
import android.util.Log;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.app.JobIntentService;

public class ExampleJobIntentService extends JobIntentService {
    public static final String TAG ="ExampleJobIntentService";

    static void enqueueWork(Context context, Intent work) {
        enqueueWork(context,ExampleJobIntentService.class,123,work);

    }


    @Override
    public void onCreate() {
        super.onCreate();

        Log.d(TAG, "onCreate");


    }

    @Override
    protected void onHandleWork(@NonNull Intent intent) {

        Log.d(TAG, "onHandleWork");




        String input = intent.getStringExtra("inputExtra");
        for (int i = 0; i <10 ; i++) {

            Log.d(TAG, input+"-"+i);

            if (
                    isStopped()
            ) {
                return;

            }
            SystemClock.sleep(1000);

        }



    }


    @Override
    public void onDestroy() {
        super.onDestroy();
        Log.d(TAG, "onDestroy");
    }


    @Override
    public boolean onStopCurrentWork() {
        Log.d(TAG, "onStopCurrentWork");
        return super.onStopCurrentWork();

    }
}

# MainActivity.java





import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;

public class MainActivity extends AppCompatActivity {

    private EditText editTextInput;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        editTextInput = findViewById(R.id.edit_text_input);
    }



    public void enqueueWork(View view) {


        String input = editTextInput.getText().toString();

        Intent serviceIntent = new Intent(this,ExampleJobIntentService.class);
        serviceIntent.putExtra("inputExtra",input);

        ExampleJobIntentService.enqueueWork(this,serviceIntent);








    }


}


# activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:gravity="center"
    android:padding="16dp"
    android:orientation="vertical">

    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Input"
        android:id="@+id/edit_text_input"/>

    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Start Service"
        android:onClick="enqueueWork"/>








</LinearLayout>
